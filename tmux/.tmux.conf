# Reload config by using
# tmux source-file ~/.tmux.conf

# ----------------------------------------------------------
# General
# ----------------------------------------------------------
set -g mouse on                 # Enable mouse scroll
set -s escape-time 0			# Remove delay on pressing escape
setw -g mode-keys vi			# Enable vi mode

# ----------------------------------------------------------
# Keybindings
# ----------------------------------------------------------
# copy-mode ("C-b [") scrolling and text selection
# Require:
#   setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -n 'M-m' if-shell "$is_vim" 'send-keys M-m'  'copy-mode'
bind-key -n 'M-,' if-shell "$is_vim" 'send-keys M-,'  'copy-mode'
bind-key -T copy-mode-vi m send -X scroll-down
bind-key -T copy-mode-vi , send -X scroll-up
bind-key -T copy-mode-vi 'M-m' send -X page-down
bind-key -T copy-mode-vi 'M-,' send -X page-up

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# Link with vim keybindings
bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
# Split windows
bind-key -n M-! split-window -v -c "#{pane_current_path}"
bind-key -n M-@ split-window -h -c "#{pane_current_path}"
# Vim integrated split windows
bind-key -n M-H if-shell "$is_vim" 'send-keys M-H' 'split-window -bh -c "#{pane_current_path}"'
bind-key -n M-J if-shell "$is_vim" 'send-keys M-J' 'split-window -v  -c "#{pane_current_path}"'
bind-key -n M-K if-shell "$is_vim" 'send-keys M-K' 'split-window -b  -c "#{pane_current_path}"'
bind-key -n M-L if-shell "$is_vim" 'send-keys M-L' 'split-window -h  -c "#{pane_current_path}"'
# Resize pane
bind-key -n C-h  if-shell "$is_vim" 'send-keys C-h'  'resize-pane -L 5'
bind-key -n C-j  if-shell "$is_vim" 'send-keys C-j'  'resize-pane -D 5'
bind-key -n C-k  if-shell "$is_vim" 'send-keys C-k'  'resize-pane -U 5'
bind-key -n C-l  if-shell "$is_vim" 'send-keys C-l'  'resize-pane -R 5'
# Manage windows
bind-key -n M-1 previous-window
bind-key -n M-2 next-window
bind-key -n 'M-!' swap-window -t -1 \; select-window -t -1
bind-key -n 'M-@' swap-window -t +1 \; select-window -t +1
bind-key -n 'M-#' new-window  -c "#{pane_current_path}"

bind-key -n M-A choose-session

bind-key -n M-a if-shell -F '#{==:#{session_name},scratch}' {
    switch-client -l
} {
    new-session -A -s scratch
}

# Manage panes
bind-key -n M-z resize-pane -Z
bind-key -n M-w if-shell "$is_vim" 'send-keys M-w'  'kill-pane'
bind-key -n M-q if-shell "$is_vim" 'send-keys M-q'  'kill-pane'
bind-key -n M-W kill-pane
bind-key -n M-Q kill-window

# ----------------------------------------------------------
# COLORSCHEME
# ----------------------------------------------------------
# Since tmux is a terminal emulator, it can be set to provide
# a different $TERM than the the value set by terminal or in
# shell profile.
#
# It is best to set tmux to support 256color or better, telling
# it that the terminal outside also support the same, then only
# use base16 color codes to set colorscheme settings.
set -g default-terminal "xterm-256color"                # Make tmux use colors
set -ga terminal-overrides ",*256col*:Tc"               # Tell tmux that outside terminal support true colors
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q' # Enable different cursor shapes in vim

# Predefined colors

# 16-color, normal
black="color00"
red="color01"
green="color02"
yellow="color03"
blue="color04"
purple="color05"
cyan="color06"
white="color07"
darkcyan="color36"
turquoise4='color30'
darkgreen='color22'
darkblue='color18'

# 16-color, bright
bright_black="color08"
bright_red="color09"
bright_green="color10"
bright_yellow="color11"
bright_blue="color12"
bright_purple="color13"
bright_cyan="color14"
bright_white="color15"

chartreuse2="color82"

# ----------------------------------------------------------
# STATUSLINE
# ----------------------------------------------------------
# Status bar background
set -g status-bg $darkgreen
set -g status-fg $black
# Active/inactive window style
# set -g window-style 'fg=colour250,bg=black'
# set -g window-active-style 'fg=colour247,bg=colour236'
# Pane border
set -g pane-border-style "bg=default fg=$chartreuse2"
set -g pane-active-border-style "bg=default fg=$purple"
# Status bar position
set-option -g status-position bottom
# Status bar, inactive windows markers and format. Also remove the last window "-" marker
set-window-option -g window-status-format "#[bg=$black,fg=$white] #I. #W#(printf '%%s\n' '#F' | tr '-' '') "
# Status bar, active windows markers and format
set-window-option -g window-status-current-format "#[bg=$chartreuse2,fg=$black] #I. #W "
# Status bar, hostname in right most section
set -g status-right "#[bg=$red,fg=$white] #H "

