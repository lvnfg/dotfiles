#!/bin/bash

# starting up
sudo apt update && sudo apt upgrade
sudo update-alternatives --config editor # 3
    # macos
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"   # install homebrew
    brew update && brew upgrade
    brew install git

# connect to remote host
echo '[remote IP address] [remote name]' | sudo tee -a /etc/hosts   # use host name name instead of ip address
ssh-copy-id [user]@[remote]                                         # add [local] public key to [remote]

# create ssh key pairs
ls -al ~/.ssh                                       # check if a key exists
ssh-keygen -t rsa -b 4096 -C "van@[machinename]"    # generate a new key pair
# add ssh key to agent
eval "$(ssh-agent -s)"      # start ssh-agent in background
ssh-add ~/.ssh/id_rsa       # add key to agent
    # macs
    open ~/.ssh/config      # check if file exists
    touch  ~/.ssh/config    # create if not exists
    # add the following to config to store the ssh key in os keychain:
    #   Host *
    #   AddKeysToAgent yes
    #   UseKeychain yes
    #   IdentityFile ~/.ssh/id_rsa
    ssh-add -K ~/.ssh/id_rsa
cat ~/.ssh/id_rsa.pub | xclip -selection c      # get [local] public key
                                                # macos: use pbcopy instead of xclip
ssh [user]@[remote] "cat ~/.ssh/id_rsa.pub" | xclip -selection c    # get public key of [remote]
echo '[public key]' >> ~/.ssh/authorized_keys                       # manage authorized keys

# git
ssh -T git@github.com   # test ssh connection to git
git config --global core.editor "vim"
git config --global user.name "van"
git config --global user.email "-"
git clone git@github.com:lvnfg/dot.git ~/dot

# link dotfiles
ln -s ~/dot/.vimrc      ~/.vimrc
<<<<<<< HEAD
ln -s ~/dot/.bashrc      ~/.bashrc
    # macos
    ln -s ~/dot/.zshrc      ~/.zshrc
=======
ln -s ~/dot/.bashrc     ~/.bashrc
ln -s ~/dot/.zshrc      ~/.zshrc   
>>>>>>> 5b41de35b8bf47221f858f672468166db7db8f7d

# vs code
ln -s ~/dot/code/settings.json      ~/.config/Code/settings.json
ln -s ~/dot/code/keybindings.json   ~/.config/Code/keybindings.json
ln -s ~/dot/code/snippets           ~/.config/Code/snippets\
    # macos
    ln -s ~/dot/code/settings.json      ~/Library/Application\ Support/Code/User/settings.json
    ln -s ~/dot/code/keybindings.json   ~/Library/Application\ Support/Code/User/keybindings.json
    ln -s ~/dot/code/snippets           ~/Library/Application\ Support/Code/User/snippets

# desktop environment
<<<<<<< HEAD
sudo apt install --no-install-recommends lubuntu-desktop    # try sudo pat install lxde to see if this is even smaller
sudo apt install xrdp
sudo systemctl status xrdp  # verify xrdp is running
sudo vim /etc/xrdp/startwm.sh   # edit setting xrdp settings to enable use of lxde
                                # comment out the last 2 lines and add:
                                #   lxsession -s Lubuntu -e LXDE
sudo service xrdp restart       # restart xrdp. (sudo systemctl restart xrdp?)
# to remove desktop environment
sudo apt purge --remove lubuntu-*; sudo apt autoremove -y
sudo vim /etc/xrdp/startwm.sh   # undo the steps used to install desktop env 
=======
sudo apt install --no-install-recommends lubuntu-desktop
sudo apt install xrdp
sudo systemctl status xrdp  # verify xrdp is running
vim /etc/xrdp/startwm.sh    # edit setting xrdp settings to enable use of lxde
                            # comment out the last 2 lines and add:
                            #   lxsession -s Lubuntu -e LXDE
sudo service xrdp restart   # restart xrdp. (sudo systemctl restart xrdp?)
>>>>>>> 5b41de35b8bf47221f858f672468166db7db8f7d
