# Reload config by using
# tmux source-file ~/.tmux.conf

# ----------------------------------------------------------
# General
# ----------------------------------------------------------
set -g mouse on                 # Enable mouse scroll
set -s escape-time 0			# Remove delay on pressing escape
setw -g mode-keys vi			# Enable vi mode

# ----------------------------------------------------------
# Keybindings
# ----------------------------------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# Link with vim keybindings
bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
# Manage panes
bind-key -n M-H split-window -bh -c "#{pane_current_path}"
bind-key -n M-J split-window -v -c "#{pane_current_path}"
bind-key -n M-K split-window -b -c "#{pane_current_path}"
bind-key -n M-L split-window -h -c "#{pane_current_path}"
bind-key -n M-x kill-pane
# Resize pane
bind-key -n M-Left  resize-pane -L 5
bind-key -n M-Down  resize-pane -D 5
bind-key -n M-Up    resize-pane -U 5
bind-key -n M-Right resize-pane -R 5
# Manage windows
bind-key -n M-[ previous-window
bind-key -n M-] next-window
bind-key -n M-{ swap-window -t -1
bind-key -n M-} swap-window -t +1
bind-key -n M-\ new-window -c "#{pane_current_path}"
bind-key -n 'M-w' if-shell "$is_vim" 'send-keys M-w'  'kill-pane'
bind-key -n 'M-q' if-shell "$is_vim" 'send-keys M-q'  'kill-pane'

# ----------------------------------------------------------
# Color scheme
# ----------------------------------------------------------
# General color settings
set -g default-terminal "xterm-256color"                # Make tmux use colors
set -ga terminal-overrides ",*256col*:Tc"               # Enable true colors
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q' # Enable different cursor shapes in vim
# Predefined colors
pure_black="#000000"
gray="#303030"
blue="#00afff"
white="#e4e4e4"
yellow="#ffff00"
pink="#ff00af"
green="#5fff00"
light_gray="#8a8a8a"
white="#e4e4e4"
dark_gray="#080808"
red="#d70000"
white="#e4e4e4"
light_blue="#66d9ef"

# ----------------------------------------------------------
# Statusline
# ----------------------------------------------------------
set -g status-bg black                                                                                            # Status bar bg
set -g status-fg white                                                                                            # Status bar fg
set-option -g status-position bottom                                                                              # Set status line position
set -g status-right "#[bg=$blue,fg=$pure_black] #H "                                                              # Format status-right
set-window-option -g window-status-format "#[bg=$gray,fg=$light_gray] #I. #W#(printf '%%s\n' '#F' | tr '-' '') "  # Format inactive window markers and remove last window "-" marker
set-window-option -g window-status-current-format "#[bg=$blue,fg=$pure_black] #I. #W "                            # Format active window marker. Default: " #I:#W#F" = " 0:bash"
