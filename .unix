#!/bin/bash

# starting up
sudo apt update && sudo apt upgrade
sudo update-alternatives --config editor # 3
sudo apt install tmux
sudo apt install git
    # macos
    cd downloads
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"   # install homebrew
    brew update && brew upgrade
    brew install git

# create ssh key pairs
ls -al ~/.ssh                                       # check if a key exists
ssh-keygen -t rsa -b 4096 -C "van@[machinename]"    # generate a new key pair
# add ssh key to agent
eval "$(ssh-agent -s)"      # start ssh-agent in background
ssh-add ~/.ssh/id_rsa       # add key to agent
    # macos
    open ~/.ssh/config      # check if file exists
    touch  ~/.ssh/config    # create if not exists
    # add the following to config to store the ssh key in os keychain:
    #   Host *
    #   AddKeysToAgent yes
    #   UseKeychain yes
    #   IdentityFile ~/.ssh/id_rsa
    ssh-add -K ~/.ssh/id_rsa
cat ~/.ssh/id_rsa.pub | xclip -selection c      # get [local] public key
                                                # macos: use pbcopy instead of xclip
ssh [user]@[remote] "cat ~/.ssh/id_rsa.pub" | xclip -selection c    # get public key of [remote]
echo '[public key]' >> ~/.ssh/authorized_keys                       # manage authorized keys
# connect to remote host
echo '[remote IP address] [remote name]' | sudo tee -a /etc/hosts   # use host name name instead of ip address
ssh-copy-id [user]@[remote]                                         # add [local] public key to [remote]

# git
ssh -T git@github.com   # test ssh connection to git
git config --global core.editor "vim"
git config --global user.name "van"
git config --global user.email "-"
git clone git@github.com:lvnfg/dotfiles.git ~/dotfiles

# link dotfiles
ln -s ~/repos/dotfiles/.vimrc      ~/.vimrc
ln -s ~/repos/dotfiles/.bashrc     ~/.bashrc
ln -s ~/repos/dotfiles/.tmux.conf ~/.tmux.conf

# disable ssh password login, including root
sudo vim /etc/ssh/sshd_config
# change the following lines to no 
# ChallengeResponseAuthentication no
# PasswordAuthentication no
# UsePAM no
# PermitRootLogin no
sudo systemctl restart ssh

# other tools
sudo apt install postgresql-client

# desktop environment
sudo apt install lxde
sudo apt install xrdp
sudo systemctl status xrdp  # verify xrdp is running
sudo vim /etc/xrdp/startwm.sh   # add to end of file:
                                #   lxsession -s LXDE -e LXDE
sudo service xrdp restart
sudo systemctl set-default multi-user.target    # disable GUI on boot. Use graphical.target to reenable
sudo passwd van # set user password to connect over xrdp if none existing
