#!/bin/bash

# sudo apt install -y git
# git config --global credential.helper cache 3600
# git clone https:/lvnfg@github.com/lvnfg/dotfiles

echo Setting up git
git config --global core.editor "vim"
git config --global core.user "van"
git config --global core.email "-"

echo Installing tmux
sudo apt install -y tmux

# set case-insensitive autocomplettion
echo set completion-ignore-case on | sudo tee -a /etc/inputrc

echo Creating dotfies simlinks
ln -s ~/dotfiles/.vimrc         ~/.vimrc
ln -s ~/dotfiles/.vim           ~/.vim
ln -s ~/dotfiles/.tmux.conf 	~/.tmux.conf
ln -s ~/dotfiles/.ssh/config    ~/.ssh/config
rm ~/.bashrc
ln -s ~/dotfiles/.bashrc		~/.bashrc
source ~/.bashrc

echo Remember to disable all ssh password login, including root
# sudo vim /etc/ssh/sshd_config
# change the following lines to no 
#   ChallengeResponseAuthentication no
#   PasswordAuthentication no
#   UsePAM no
#   PermitRootLogin no
# sudo systemctl restart ssh

echo Remember to generate ssh key if needed
# ssh-keygen -t rsa -b 4096 -C "van@vm-"

echo Select an environment to setup:
select env in skip vminf vmatm vmatm-dev
do
    echo $env selected
    if [[ $env = "skip" ]]; then
        echo Environment setup skipped
        break
    elif [[ $env = "vminf" ]] || [[ $env = "vmatm" ]]; then
        echo Case switch vminf or vmatm
        break
    else
        echo Unknown cases
        break
    fi
done

if [ $HOSTNAME == "vmatm" ]; then
    git clone https://lvnfg@github.com/lvnfg/atm ~/atm
    # install ibgateway
    # cd ~/atm
    # curl https://download2.interactivebrokers.com/portal/clientportal.gw.zip --output clientportal.gw.zip
    # sudo apt install unzip
    # unzip clientportal.gw.zip
    sudo apt install -y openjdk-11-jdk-headless
    rm clientportal.gw.zip
    # install firefox and its webdriver
    sudo apt install -y firefox-esr
    sudo apt install -y wget
    wget -O geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
    tar xzf geckodriver.tar.gz
    sudo mv geckodriver /usr/bin/geckodriver
    rm geckodriver.tar.gz
    # install dependencies
    sudo apt install -y python3-pip 
    sudo apt install -y postgresql-client
    pip3 install python-language-server
    pip3 install psycopg2-binar
    pip3 install google-cloud-secretmanager
    pip3 install matplotlib
    pip3 install numpy
    pip3 install pandas
    pip3 install requests
    pip3 install selenium
    pip3 install colorlog
    pip3 install psutil
    # X11 forwarding
    sudo apt install -y xauth
    # cat /etc/ssh/sshd_config | grep X11Forwarding
    # make sure it says yes
    # on local box (where image should be output to)
    # Windows WSL 2: install Debian 10
        # sudo apt update && sudo apt upgrade
        # add the followings to .bashrc & resource
        # export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2>/dev/null):0
        # export LIBGL_ALWAYS_INDIRECT=1
        # source .bashrc
        # install VcXrsv. Check the box "Disable access control" when launch
        # ssh -X [remote]
    # desktop environment, if necessary
    # sudo apt install lxde
    # sudo apt install xrdp
    # sudo systemctl status xrdp  # verify xrdp is running
    # sudo vim /etc/xrdp/startwm.sh   # add to end of file: lxsession -s LXDE -e LXDE
    # sudo service xrdp restart
    # sudo systemctl set-default multi-user.target    # disable GUI on boot. Use graphical.target to reenable
    # sudo passwd van # set user password to connect over xrdp if none existing
fi
