#!/bin/bash

# starting up
    # ---linux---
        sudo apt update && sudo apt upgrade
        sudo update-alternatives --config editor # 3
    # ---macos---
        # install homebrew
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
        brew update && brew upgrade
        brew install git
        sudo rm -rf ~/Downloads
        ln -s ~/Library/Mobile\ Documents/com~apple~CloudDocs/Downloads ~/Downloads 

# ssh keys
ls -al ~/.ssh   # check if a key pair already exists
ssh-keygen -t rsa -b 4096 -C "van@fagaceae.com"
eval "$(ssh-agent -s)"  # start ssh-agent in background
# add key to ssh agent
    # ---linux---
        ssh-add ~/.ssh/id_rsa
    # ---macos---
        open ~/.ssh/config          # check if file exists
        touch touch ~/.ssh/config   # create if not exists
        # add the following to config to store the ssh key in os keychain:
            Host *
            AddKeysToAgent yes
            UseKeychain yes
            IdentityFile ~/.ssh/id_rsa
            ssh-add -K ~/.ssh/id_rsa
# copy local public key to clipboard
    # ---linux---
        xclip -sel clip < ~/.ssh/id_rsa.pub
        # sudo apt install xclip if command doesn't exist
    # ---macos---
        pbcopy < ~/.ssh/id_rsa.pub
# add authorized keys 
    # from local to local
        vim ~/.ssh/authorized_keys
    # from local to remote
        ssh-copy-id van@138.91.32.89
# get remote's public key from local
    # ---linux---
        ssh van@138.91.32.89 "cat ~/.ssh/id_rsa.pub" | xclip -selection c
    # ---macos---
        ssh van@138.91.32.89 "cat ~/.ssh/id_rsa.pub" | pbcopy

# config git
# test connection to git using ssh key
ssh -T git@github.com
# clone git with ssh: git@github.com:lvnfg/dot.git
# clone with https: https://github.com/lvnfg/dot.git
git conifg --global core.editor "vim"
git config --global user.name "van"
git config --global user.email "-"
git clone https://github.com/lvnfg/dot ~/desktop/dot

# link dotfiles
ln -s ~/desktop/dot/.vimrc ~/.vimrc
ln -s ~/desktop/dot/.bashrc ~/.bashrc
ln -s ~/desktop/dot/.zshrc ~/.zshrc

# -----------FRESH SNAPSHOT END------------------

# add remote host to use name instead of ip when ssh
echo '104.215.158.213 vmDev' | sudo tee -a /etc/hosts

# vs code
    # ---linux---
        # ubuntu = ~/.config/Code/
    # ---macos---
        rm ~/Library/Application\ Support/Code/User/settings.json
        rm ~/Library/Application\ Support/Code/User/keybindings.json
        rm -r ~/Library/Application\ Support/Code/User/snippets
        # Create symlinks to VS Code setting files in repos
        ln -s ~/Desktop/dot/code/settings.json ~/Library/Application\ Support/Code/User/settings.json
        ln -s ~/Desktop/dot/code/keybindings.json ~/Library/Application\ Support/Code/User/keybindings.json
        ln -s ~/Desktop/dot/code/snippets ~/Library/Application\ Support/Code/User/snippets
# install vs codespace
sudo curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
sudo apt-get update
sudo apt-get install vso
vso start

# AZURE CLI
# --------------------------------------------------
    # ---linux---
        sudo apt-get update
        sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg
        curl -sL https://packages.microsoft.com/keys/microsoft.asc |
            gpg --dearmor |
            sudo tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null
        AZ_REPO=$(lsb_release -cs)
        echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" |
            sudo tee /etc/apt/sources.list.d/azure-cli.list
        sudo apt-get update
        sudo apt-get install azure-cli
    # ---macos---
        brew install azure-cli
# configure default output
az configure 
